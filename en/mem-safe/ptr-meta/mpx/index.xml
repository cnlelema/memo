<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intel MPX on Lele&#39;s Memo</title>
    <link>https://cnlelema.github.io/memo/en/mem-safe/ptr-meta/mpx/</link>
    <description>Recent content in Intel MPX on Lele&#39;s Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 26 Jul 2019 00:04:06 -0400</lastBuildDate>
    
	<atom:link href="https://cnlelema.github.io/memo/en/mem-safe/ptr-meta/mpx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOGO: Buy Spatial Memory Safety, Get Temporal Memory Safety (Almost) Free</title>
      <link>https://cnlelema.github.io/memo/en/mem-safe/ptr-meta/mpx/bogo/</link>
      <pubDate>Sat, 12 Oct 2019 20:29:22 -0400</pubDate>
      
      <guid>https://cnlelema.github.io/memo/en/mem-safe/ptr-meta/mpx/bogo/</guid>
      <description>Reference 1
 LLVM MPX (BOGO)  Q&amp;amp;A How to determine the size of object? How to store the bound info in MPX? How to do bound checking? How to choose the instrumentation point? A Map from instruction to the pointer it want to access? Reference 1 Overview A module pass: class llmpx: public ModulePass runOnModule(Module &amp;amp;) Methods: mpxPass(Module &amp;amp;) harden_cfi(Module &amp;amp;) create_global_constants(Module &amp;amp;) collect_safe_access(Module &amp;amp;) transform_functions(Module &amp;amp;) transform_global(Module &amp;amp;)</description>
    </item>
    
  </channel>
</rss>